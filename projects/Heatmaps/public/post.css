.sidebar-right {
    min-width: 275px;
    max-width: 275px;
    position: fixed;
    right: 0;
    top: 0;
    bottom: 0;
    background-color: rgb(255, 255, 255);
    box-shadow: rgba(0, 0, 0, 0.156863) 0px 2px 10px 0px, rgba(0, 0, 0, 0.258824) 0px 2px 5px 0px;
}

.size2 {
    height: 118px;
    line-height: 118px;
}

.size3 {
    height: 178px;
    line-height: 178px;
}

canvas {
    z-index: 1 !important;
}

.view {
    position: absolute;
}
/*
#content {
    padding-right: 275px;
    font-size: 0;
}
*/
/*
body.two-pane .view {
    width: 50%;
    min-width: 50%;
    border: 1px rgb(184, 184, 184) solid;
    display: inline-block;
    height: 100%;
}
*/
/*

.view {
    width: 100%;
    height: 100%;
}

.view > div {
    width: 100%;
    min-width: 100%;
    height: 100%;
}

canvas {
    max-width: 100%;
    max-height: 100%;
    height: 100%;
    width: 100%;
    min-width: 100%;
    min-height: 100%;
    z-index: auto !important;
}

.view image {
    position: relative;
    top: 0;
    left: 0;
}

.heatmap-wrapper {
    position: relative;
}

.heatmap {
    position: absolute;
    width: 100%;
}

html,
body,
#body,
#content-wrapper,
#content {
    height: 100%;
    display: block;
}

.heatmap-image {
    max-width: 100%;
    max-height: 100%;
}
*/

.drop {
    position: absolute;
    width: 15px;
    height: 15px;
    background-image: none;
    background-color: rgba(0, 0, 0, 0.6);
    border-radius: 7px;
}

body.bullseye-clicks .drop {
    background-image: url('/images/bullseye.gif') !important;
}

.dropped {
    background-color: #EBC;
    border-color: #B89;
}

.active {
    background-color: #CEB;
    border-color: #9B8;
}

#pla {
    cursor: pointer;
    position: relative;
    left: 0;
    top: 0;
}

body.hide-heatmap .heatmap > canvas {
    visibility: hidden;
}

body.hide-clicks .drop {
    visibility: hidden;
}

body:not(.stop-playing) #stop-container {
    display: none;
}

body.playback-not-playing .drop {
    transition: none !important;
    opacity: 1 !important;
}

body.stop-playing #play-container {
    display: none;
}

body.playback-clicks .drop {
    transform: translateZ(0);
    visibility: inherit !important;
}

body.playback-setup .drop {
    transition: none !important;
}

body.playback-start .drop {
    opacity: 0;
}

body.playback-play .drop {
    opacity: 1;
}

body:not(.loading-heatmaps) #loadingBarContainer,
body:not(.playing-heatmaps) #playingBarContainer {
    display: none;
    transition: none !important;
}

.sliderInput {
    width: 50px;
    float: right;
    display: none;
}

.legend-area {
    position: fixed;
    bottom: 0;
    right: 0;
    padding: 10px;
    background: white;
    outline: 3px solid black;
    line-height: 1em;
    z-index: 1000;
}

h4 {
    margin: 0;
    padding: 0;
    margin-bottom: 5px;
}

#min {
    float: left;
}

#max {
    float: right;
}

span {
    font-size: 14px;
    margin: 0;
    padding: 0;
}

.tooltip {
    position: absolute;
    left: 0;
    top: 0;
    background: rgba(0, 0, 0, .8);
    color: white;
    font-size: 14px;
    padding: 5px;
    line-height: 18px;
    display: none;
}

.dropdown-text {
    font-size: 12px;
    margin-right: 8px;
}

.ext-link {
    font-size: 14px;
    width: 21px;
    text-align: right;
    display: inline-block;
}

.selection {
    position: absolute;
    border: 1px solid #89B;
    background: #BCE;
    background-color: #BEC;
    border-color: #8B9;
    opacity: .9;
    z-index: 999999;
}

.snackbar-content table {
    width: 400px;
    color: rgba(255, 255, 255, .84);
}

.snackbar-container0 .snackbar {
    position: fixed;
    left: 20px;
    bottom: 0;
    z-index: 999999;
}

.snackbar-container1 .snackbar {
    position: fixed;
    bottom: 0;
    right: 298px;
    z-index: 999999;
}

body > #snackbar-container {
    display: none !important;
}

.double-dropdown a.dropdown-toggle {
    max-width: 122px;
    text-overflow: ellipsis;
    white-space: nowrap;
    overflow: hidden;
}

form[name=generator].ng-invalid #generateLabel {
    display: none;
}

form[name=generator].ng-valid #errorLabel {
    display: none;
}

form[name=generator].ng-valid #generateLabel {
    display: block;
}

.error-container .error {
    display: none;
}

input[type=url].ng-invalid-url + .error-container > .invalid-url {
    display: block !important;
}